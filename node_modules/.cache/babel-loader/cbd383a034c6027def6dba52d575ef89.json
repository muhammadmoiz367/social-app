{"ast":null,"code":"import firebase, { db } from '../firebase/firebase';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\nexport const SIGNOUT_ERROR = 'SIGNOUT_ERROR';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n\nfunction loginSuccess() {\n  return {\n    type: LOGIN_SUCCESS\n  };\n}\n\nfunction loginError(err) {\n  return {\n    type: LOGIN_ERROR,\n    err\n  };\n}\n\nfunction signoutSuccess() {\n  return {\n    type: SIGNOUT_SUCCESS\n  };\n}\n\nfunction signoutError(err) {\n  return {\n    type: SIGNOUT_ERROR,\n    err\n  };\n}\n\nfunction signupSuccess() {\n  return {\n    type: SIGNUP_SUCCESS\n  };\n}\n\nfunction signupError(err) {\n  return {\n    type: SIGNUP_ERROR,\n    err\n  };\n}\n\nexport const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch(loginSuccess());\n      dispatch(setProgressBar('OPEN'));\n    }).then(() => {\n      setTimeout(() => {\n        dispatch(setProgressBar('CLOSE'));\n      }, 2000);\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch(setProgressBar('OPEN'));\n    }).then(() => {\n      setTimeout(() => {\n        dispatch(setProgressBar('CLOSE'));\n      }, 2000);\n    }).catch(err => {\n      dispatch(signoutError(err));\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirebase().firestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(response => {\n      return db.collection('users').doc(response.user.uid).set({\n        fisrtName: newUser.fisrtName,\n        name: newUser.fisrtName + newUser.lastName,\n        initials: newUser.fisrtName[0] + newUser.lastName[0],\n        tweets: []\n      }).then(() => {\n        dispatch(signupSuccess());\n      }).catch(err => {\n        dispatch(signupError(err));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/actions/auth.js"],"names":["firebase","db","LOGIN_SUCCESS","LOGIN_ERROR","SIGNOUT_SUCCESS","SIGNOUT_ERROR","SIGNUP_SUCCESS","SIGNUP_ERROR","loginSuccess","type","loginError","err","signoutSuccess","signoutError","signupSuccess","signupError","signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","setProgressBar","setTimeout","catch","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","response","collection","doc","user","uid","set","fisrtName","name","lastName","initials","tweets"],"mappings":"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","sourcesContent":["import firebase, { db } from '../firebase/firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport const LOGIN_SUCCESS='LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR='LOGIN_ERROR'\r\nexport const SIGNOUT_SUCCESS='SIGNOUT_SUCCESS'\r\nexport const SIGNOUT_ERROR='SIGNOUT_ERROR'\r\nexport const SIGNUP_SUCCESS='SIGNUP_SUCCESS'\r\nexport const SIGNUP_ERROR='SIGNUP_ERROR'\r\n\r\nfunction loginSuccess(){\r\n    return{\r\n        type:LOGIN_SUCCESS\r\n    }\r\n}\r\nfunction loginError(err){\r\n    return{\r\n        type:LOGIN_ERROR,\r\n        err\r\n    }\r\n}\r\nfunction signoutSuccess(){\r\n    return{\r\n        type:SIGNOUT_SUCCESS\r\n    }\r\n}\r\nfunction signoutError(err){\r\n    return{\r\n        type:SIGNOUT_ERROR,\r\n        err\r\n    }\r\n}\r\nfunction signupSuccess(){\r\n    return{\r\n        type:SIGNUP_SUCCESS\r\n    }\r\n}\r\nfunction signupError(err){\r\n    return{\r\n        type:SIGNUP_ERROR,\r\n        err\r\n    }\r\n}\r\n\r\n\r\nexport const signIn=(credentials)=>{\r\n    return (dispatch,getState, {getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(()=>{\r\n            dispatch(loginSuccess())\r\n            dispatch(setProgressBar('OPEN'))\r\n        }).then(()=>{\r\n            setTimeout(()=>{\r\n                dispatch(setProgressBar('CLOSE'))\r\n            },2000)\r\n        })\r\n        .catch((err)=>{\r\n            dispatch(loginError(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signOut()\r\n        .then(()=>{\r\n            dispatch(setProgressBar('OPEN'))\r\n        }).then(()=>{\r\n            setTimeout(()=>{\r\n                dispatch(setProgressBar('CLOSE'))\r\n            },2000)\r\n        })\r\n        .catch((err)=>{\r\n            dispatch(signoutError(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp=(newUser)=>{\r\n    return (dispatch,getState,{getFirebase, getFirestore})=>{\r\n        const firebase=getFirebase();\r\n        const firestore=getFirebase().firestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response)=>{\r\n            return db.collection('users').doc(response.user.uid).set({\r\n                fisrtName:newUser.fisrtName,\r\n                name:newUser.fisrtName+newUser.lastName,\r\n                initials:newUser.fisrtName[0]+newUser.lastName[0],\r\n                tweets:[]\r\n            }).then(()=>{\r\n                dispatch(signupSuccess())\r\n            }).catch(err =>{\r\n                dispatch(signupError(err))\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}