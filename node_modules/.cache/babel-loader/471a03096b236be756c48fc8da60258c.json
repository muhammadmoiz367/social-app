{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\react-redux\\\\social-app\\\\src\\\\components\\\\repliesPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport { getSpecificPost, commentOnPost, likePost, unlikePost } from '../actions/dataActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 900,\n    marginTop: '11%',\n    textAlign: 'left',\n    marginRight: '5%',\n    marginLeft: '2px'\n  },\n  rootExpand: {\n    maxWidth: 1000,\n    margin: '8% 0%',\n    marginLeft: '5%'\n  },\n  mediaExpand: {\n    height: 485,\n    width: '100%'\n  },\n  avatar: {\n    height: 30,\n    width: 30\n  },\n  usersAvatar: {\n    height: 30,\n    width: 30\n  },\n  content: {\n    marginTop: 10\n  },\n  separator: {\n    borderBottom: '2px solid lightgray'\n  },\n  date: {\n    display: 'block',\n    marginLeft: 20,\n    borderBottom: '2px solid lightgray'\n  }\n}));\n\nfunction RepliesPage(props) {\n  const classes = useStyles();\n  const [text, setText] = useState('');\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmitComment = () => {\n    const comment = {\n      body: text,\n      postId: props.id,\n      createdAt: new Date().toISOString(),\n      userImage: props.user.credentials.imageUrl,\n      userHandle: props.user.credentials.handle\n    };\n    console.log(comment);\n    props.dispatch(commentOnPost(comment, props.id));\n  };\n\n  const isLiked = () => {\n    if (props.user.likes && props.user.likes.find(like => like.postId === props.specificPost.postId)) return true;else return false;\n  };\n\n  const handleLike = e => {\n    e.preventDefault();\n    props.dispatch(likePost(props.specificPost.postId, props.user.credentials.handle));\n  };\n\n  const handleUnlike = e => {\n    e.preventDefault();\n    props.dispatch(unlikePost(props.specificPost.postId, props.user.credentials.handle));\n  };\n\n  useEffect(() => {\n    props.dispatch(getSpecificPost(props.id));\n  }, []);\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 7,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.rootExpand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.mediaExpand,\n    image: props.specificPost.postImage,\n    title: props.specificPost.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.separator,\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: props.specificPost.userImage,\n      alt: props.specificPost.userHandle,\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    })),\n    title: props.specificPost.userHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: \"avatar-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, props.specificPost.userHandle), \" \", props.specificPost.body)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replies-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, isLiked() ? /*#__PURE__*/React.createElement(FavoriteOutlinedIcon, {\n    style: {\n      color: 'rgb(228,64,95)'\n    },\n    onClick: handleUnlike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, props.specificPost.likeCount), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(QuestionAnswerOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, props.specificPost.commentCount), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 75\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, moment(props.specificPost.createdAt).startOf('hour').fromNow())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"comment\",\n    label: \"Comment\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      color: 'rgb(228,64,95)'\n    },\n    onClick: handleSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nconst mapStateToProps = ({\n  data,\n  user\n}) => {\n  return {\n    specificPost: data.specificPost,\n    user\n  };\n};\n\nexport default connect(mapStateToProps)(RepliesPage);","map":{"version":3,"sources":["F:/react/react-redux/social-app/src/components/repliesPage.js"],"names":["React","useEffect","useState","connect","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","QuestionAnswerOutlinedIcon","MoreVertIcon","makeStyles","Card","moment","Grid","TextField","SendIcon","getSpecificPost","commentOnPost","likePost","unlikePost","useStyles","theme","root","maxWidth","marginTop","textAlign","marginRight","marginLeft","rootExpand","margin","mediaExpand","height","width","avatar","usersAvatar","content","separator","borderBottom","date","display","RepliesPage","props","classes","text","setText","handleChange","e","target","value","handleSubmitComment","comment","body","postId","id","createdAt","Date","toISOString","userImage","user","credentials","imageUrl","userHandle","handle","console","log","dispatch","isLiked","likes","find","like","specificPost","handleLike","preventDefault","handleUnlike","postImage","color","likeCount","commentCount","startOf","fromNow","mapStateToProps","data"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport moment from 'moment'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {getSpecificPost, commentOnPost, likePost, unlikePost} from '../actions/dataActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 900,\r\n      marginTop: '11%',\r\n      textAlign:'left',\r\n      marginRight: '5%',\r\n      marginLeft: '2px'\r\n    },\r\n    rootExpand: {\r\n        maxWidth: 1000,\r\n        margin: '8% 0%',\r\n        marginLeft: '5%'\r\n    },\r\n    mediaExpand: {\r\n      height: 485,\r\n      width: '100%'\r\n    },\r\n    avatar: {\r\n      height: 30,\r\n      width: 30\r\n    },\r\n    usersAvatar: {\r\n        height: 30,\r\n        width: 30,\r\n    },\r\n    content: {\r\n        marginTop: 10,\r\n        \r\n    },\r\n    separator:{\r\n        borderBottom: '2px solid lightgray'\r\n    },\r\n    date: {\r\n        display: 'block',\r\n        marginLeft: 20,\r\n        borderBottom: '2px solid lightgray',\r\n\r\n    }\r\n  }));\r\n\r\nfunction RepliesPage(props) {\r\n    const classes = useStyles();\r\n    const [text, setText]=useState('')\r\n    const handleChange=(e)=>{\r\n        setText(e.target.value)\r\n    }\r\n    const handleSubmitComment=()=>{\r\n        const comment={\r\n            body: text,\r\n            postId: props.id,\r\n            createdAt: new Date().toISOString(),\r\n            userImage: props.user.credentials.imageUrl,\r\n            userHandle: props.user.credentials.handle\r\n        }\r\n        console.log(comment)\r\n        props.dispatch(commentOnPost(comment, props.id))\r\n    }\r\n    const isLiked=()=>{\r\n        if(props.user.likes && props.user.likes.find((like)=> like.postId === props.specificPost.postId))\r\n            return true\r\n        else    \r\n            return false\r\n    }\r\n    const handleLike=(e)=>{\r\n        e.preventDefault()\r\n        props.dispatch(likePost(props.specificPost.postId, props.user.credentials.handle))\r\n    }\r\n    const handleUnlike=(e)=>{\r\n        e.preventDefault()\r\n        props.dispatch(unlikePost(props.specificPost.postId, props.user.credentials.handle))\r\n    }\r\n    useEffect(() => {\r\n        props.dispatch(getSpecificPost(props.id))\r\n    }, [])\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item sm={7} xs={12}>\r\n                    <Card  className={classes.rootExpand}>\r\n                        <CardMedia\r\n                            className={classes.mediaExpand}\r\n                            image={props.specificPost.postImage}\r\n                            title={props.specificPost.body}\r\n                        />\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item sm={5} xs={12}>\r\n                    <Card  className={classes.root}>\r\n                        <CardHeader\r\n                            className={classes.separator}\r\n                            avatar={\r\n                                <Avatar src={props.specificPost.userImage} alt={props.specificPost.userHandle} aria-label=\"recipe\" className={classes.avatar} />\r\n                            }\r\n                            action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                            }\r\n                            title={props.specificPost.userHandle}\r\n                        />\r\n                        <CardContent className={classes.content}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className=\"avatar-name\">\r\n                            <span className=\"userName\">{props.specificPost.userHandle}</span> {props.specificPost.body}\r\n                            </Typography>\r\n                            \r\n                        </CardContent>\r\n                        <div className=\"replies-box\"></div>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton aria-label=\"add to favorites\">\r\n                                {isLiked() \r\n                                    ? <FavoriteOutlinedIcon  style={{color:'rgb(228,64,95)'}} onClick={handleUnlike}/>\r\n                                    : <FavoriteBorderOutlinedIcon onClick={handleLike} />\r\n                                }\r\n                            </IconButton>\r\n                            <span>{props.specificPost.likeCount}</span>\r\n                            <IconButton aria-label=\"share\">\r\n                                <QuestionAnswerOutlinedIcon />\r\n                            </IconButton>\r\n                            <span>{props.specificPost.commentCount}</span><br/><br/>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.date} >\r\n                                {moment(props.specificPost.createdAt).startOf('hour').fromNow() }\r\n                            </Typography>\r\n                        </CardActions>\r\n                        \r\n                        <div className=\"comment-box\">\r\n                            <TextField id=\"comment\" label=\"Comment\" onChange={handleChange}/>\r\n                            <SendIcon style={{color:'rgb(228,64,95)'}} onClick={handleSubmitComment} />\r\n                        </div>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=({data, user})=>{\r\n    return{\r\n        specificPost: data.specificPost,\r\n        user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RepliesPage)"]},"metadata":{},"sourceType":"module"}