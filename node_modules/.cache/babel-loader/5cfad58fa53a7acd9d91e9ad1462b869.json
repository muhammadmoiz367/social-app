{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\react-redux\\\\social-app\\\\src\\\\components\\\\newPost.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 62\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  /**\r\n   * Whether this step is active.\r\n   */\n  active: PropTypes.bool,\n\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\n  completed: PropTypes.bool\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\r\n   * Whether this step is active.\r\n   */\n  active: PropTypes.bool,\n\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\n  completed: PropTypes.bool,\n\n  /**\r\n   * The label displayed in the step icon.\r\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function NewPost() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    className: \"timeline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(QontoConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: QontoStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/components/newPost.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","Button","Typography","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","NewPost","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst QontoConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 10,\r\n    left: 'calc(-50% + 16px)',\r\n    right: 'calc(50% + 16px)',\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  line: {\r\n    borderColor: '#eaeaf0',\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function NewPost() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} className=\"timeline\">\r\n      <Stepper alternativeLabel activeStep={activeStep}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}