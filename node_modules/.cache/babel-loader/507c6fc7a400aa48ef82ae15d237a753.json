{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\react-redux\\\\social-app\\\\src\\\\components\\\\newPost.js\";\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport ImageRoundedIcon from '@material-ui/icons/ImageRounded';\nimport TextFieldsRoundedIcon from '@material-ui/icons/TextFieldsRounded';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ImageForm from '../components/imageForm';\nimport TextForm from '../components/textForm';\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(ImageRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(TextFieldsRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nfunction getSteps() {\n  return ['Select picture', 'Write caption', 'Create post'];\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport default function NewPost() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [image, setImage] = useState('');\n  const [text, setText] = useState('');\n\n  function handleImageChange(image) {\n    console.log(tetxt);\n    setImage(image);\n  }\n\n  function handleTextChange(text) {\n    console.log(newPostDetails);\n    setText(text);\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/React.createElement(ImageForm, {\n          onHandleImageChange: handleImageChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }\n        });\n\n      case 1:\n        return /*#__PURE__*/React.createElement(TextForm, {\n          onHandleTextChange: handleTextChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        });\n\n      case 2:\n        return 'Upload your picture';\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    className: \"timeline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"All steps completed - Picture uploaded successfully\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    style: {\n      backgroundColor: 'rgb(228,64,95)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Post' : 'Next')))));\n}","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/components/newPost.js"],"names":["React","useState","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","ImageRoundedIcon","TextFieldsRoundedIcon","VideoLabelIcon","StepConnector","Button","Typography","ImageForm","TextForm","ColorlibConnector","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","useColorlibStepIconStyles","root","zIndex","color","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","classes","icons","String","icon","getSteps","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","NewPost","activeStep","setActiveStep","steps","image","setImage","text","setText","handleImageChange","console","log","tetxt","handleTextChange","newPostDetails","getStepContent","step","handleNext","prevActiveStep","handleBack","map","label","length"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport ImageRoundedIcon from '@material-ui/icons/ImageRounded';\r\nimport TextFieldsRoundedIcon from '@material-ui/icons/TextFieldsRounded';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ImageForm from '../components/imageForm'\r\nimport TextForm from '../components/textForm'\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 22,\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: '#eaeaf0',\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: '#ccc',\r\n      zIndex: 1,\r\n      color: '#fff',\r\n      width: 50,\r\n      height: 50,\r\n      display: 'flex',\r\n      borderRadius: '50%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n  });\r\n\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <ImageRoundedIcon />,\r\n    2: <TextFieldsRoundedIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return ['Select picture', 'Write caption', 'Create post'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default function NewPost() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const [image, setImage] = useState('')\r\n  const [text, setText] = useState('')\r\n\r\n  function handleImageChange(image){\r\n    console.log(tetxt)\r\n    setImage(image)\r\n  }\r\n  function handleTextChange(text){\r\n    console.log(newPostDetails)\r\n    setText(text)\r\n  }\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (<ImageForm onHandleImageChange={handleImageChange}/>);\r\n      case 1:\r\n        return (<TextForm onHandleTextChange={handleTextChange} />);\r\n      case 2:\r\n        return 'Upload your picture';\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root} className=\"timeline\">\r\n\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - Picture uploaded successfully\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button} >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n                style={{backgroundColor:'rgb(228,64,95)'}}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Post' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}