{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\react-redux\\\\social-app\\\\src\\\\components\\\\repliesPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport { getSpecificPost } from '../actions/dataActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 900,\n    marginTop: '11%',\n    textAlign: 'left',\n    marginRight: '5%',\n    marginLeft: '2px'\n  },\n  rootExpand: {\n    maxWidth: 1000,\n    margin: '8% 0%',\n    marginLeft: '5%'\n  },\n  mediaExpand: {\n    height: 450,\n    width: '100%'\n  },\n  avatar: {\n    height: 30,\n    width: 30\n  },\n  content: {\n    marginTop: -20,\n    maxHeight: '300px'\n  }\n}));\n\nfunction RepliesPage(props) {\n  const classes = useStyles();\n\n  const handleLike = e => {\n    e.preventDefault();\n    console.log('Post liked');\n  };\n\n  useEffect(() => {\n    props.dispatch(getSpecificPost(props.id));\n  }, []);\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 7,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.rootExpand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.mediaExpand,\n    image: props.specificPost.postImage,\n    title: props.specificPost.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: props.specificPost.userImage,\n      alt: props.specificPost.userHandle,\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    })),\n    title: props.post.userHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, props.post.userHandle), \" \", props.post.body), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, moment(props.post.createdAt).startOf('hour').fromNow())), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderOutlinedIcon, {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, props.post.likeCount), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(QuestionAnswerOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, props.post.commentCount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"comment\",\n    label: \"Comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nconst mapStateToProps = ({\n  data\n}, {\n  id\n}) => {\n  const post = data.posts[id];\n  return {\n    post: post,\n    specificPost: data.specificPost\n  };\n};\n\nexport default connect(mapStateToProps)(RepliesPage);","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/components/repliesPage.js"],"names":["React","useEffect","connect","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","QuestionAnswerOutlinedIcon","MoreVertIcon","makeStyles","Card","moment","Grid","TextField","SendIcon","getSpecificPost","useStyles","theme","root","maxWidth","marginTop","textAlign","marginRight","marginLeft","rootExpand","margin","mediaExpand","height","width","avatar","content","maxHeight","RepliesPage","props","classes","handleLike","e","preventDefault","console","log","dispatch","id","specificPost","postImage","body","userImage","userHandle","post","createdAt","startOf","fromNow","likeCount","commentCount","mapStateToProps","data","posts"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport moment from 'moment'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {getSpecificPost} from '../actions/dataActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 900,\r\n      marginTop: '11%',\r\n      textAlign:'left',\r\n      marginRight: '5%',\r\n      marginLeft: '2px'\r\n    },\r\n    rootExpand: {\r\n        maxWidth: 1000,\r\n        margin: '8% 0%',\r\n        marginLeft: '5%'\r\n    },\r\n    mediaExpand: {\r\n      height: 450,\r\n      width: '100%'\r\n    },\r\n    avatar: {\r\n      height: 30,\r\n      width: 30\r\n    },\r\n    content:{\r\n        marginTop: -20,\r\n        maxHeight: '300px'\r\n    }\r\n  }));\r\n\r\nfunction RepliesPage(props) {\r\n    const classes = useStyles();\r\n    const handleLike=(e)=>{\r\n        e.preventDefault()\r\n        console.log('Post liked')\r\n    }\r\n    useEffect(() => {\r\n        props.dispatch(getSpecificPost(props.id))\r\n    }, [])\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item sm={7} xs={12}>\r\n                    <Card  className={classes.rootExpand}>\r\n                        <CardMedia\r\n                            className={classes.mediaExpand}\r\n                            image={props.specificPost.postImage}\r\n                            title={props.specificPost.body}\r\n                        />\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item sm={5} xs={12}>\r\n                    <Card  className={classes.root}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar src={props.specificPost.userImage} alt={props.specificPost.userHandle} aria-label=\"recipe\" className={classes.avatar} />\r\n                            }\r\n                            action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                            }\r\n                            title={props.post.userHandle}\r\n                        />\r\n                        <CardContent className={classes.content}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            <span className=\"userName\">{props.post.userHandle}</span> {props.post.body}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {moment(props.post.createdAt).startOf('hour').fromNow() }\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions disableSpacing>\r\n                            <IconButton aria-label=\"add to favorites\">\r\n                                <FavoriteBorderOutlinedIcon onClick={handleLike}/>\r\n                            </IconButton>\r\n                            <span>{props.post.likeCount}</span>\r\n                            <IconButton aria-label=\"share\">\r\n                                <QuestionAnswerOutlinedIcon />\r\n                            </IconButton>\r\n                            <span>{props.post.commentCount}</span>\r\n                        </CardActions>\r\n                        <div className=\"comment-box\">\r\n                            <TextField id=\"comment\" label=\"Comment\" />\r\n                            <SendIcon />\r\n                        </div>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=({data},{id})=>{\r\n    const post = data.posts[id]\r\n    return{\r\n        post: post,\r\n        specificPost: data.specificPost\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RepliesPage)"]},"metadata":{},"sourceType":"module"}