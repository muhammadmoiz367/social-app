{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\react-redux\\\\social-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider, useSelector } from 'react-redux';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport firebaseConfig from \"./firebase/firebase\";\nimport firebase from \"firebase/app\";\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }, \"Loading screen...\");\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}))))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","useSelector","ReactReduxFirebaseProvider","getFirebase","isLoaded","createFirestoreInstance","firebaseConfig","firebase","store","App","serviceWorker","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,aAApC;AACA,SAASC,0BAAT,EAAqCC,WAArC,EAAkDC,QAAlD,QAAkE,sBAAlE;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,oBAAoB,GAAC;AACzBC,EAAAA,WAAW,EAAC,OADa;AAEzBC,EAAAA,sBAAsB,EAAC,IAFE;AAGzBC,EAAAA,sBAAsB,EAAE,KAHC;AAIzBC,EAAAA,gBAAgB,EAAC;AAJQ,CAA3B;AAOA,MAAMC,QAAQ,GAAG;AACfT,EAAAA,QADe;AAEfU,EAAAA,MAAM,EAAEX,cAFO;AAGfW,EAAAA,MAAM,EAACN,oBAHQ;AAIfO,EAAAA,QAAQ,EAAEV,KAAK,CAACU,QAJD;AAKfb,EAAAA;AALe,CAAjB;;AAQA,SAASc,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAC/B,QAAMC,IAAI,GAACpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACf,QAAN,CAAec,IAAzB,CAAtB;AACA,MAAG,CAACjB,QAAQ,CAACiB,IAAD,CAAZ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACJ,SAAOD,QAAP;AACD;;AAEDtB,QAAQ,CAACyB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF,EAUEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAcA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider, useSelector} from 'react-redux'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport firebaseConfig from \"./firebase/firebase\";\nimport firebase from \"firebase/app\";\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst profileSpecificProps={\n  userProfile:'users',\n  useFirestoreForProfile:true,\n  enableRedirectHandling: false,\n  resetBeforeLogin:false\n}\n\nconst rrfProps = {\n  firebase,\n  config: firebaseConfig,\n  config:profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({children}){\n  const auth=useSelector(state => state.firebase.auth)\n  if(!isLoaded(auth))\n      return <div>Loading screen...</div>\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}