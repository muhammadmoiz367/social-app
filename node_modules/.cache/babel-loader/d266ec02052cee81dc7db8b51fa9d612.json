{"ast":null,"code":"const isEmpty = string => {\n  if (string.trim() === \"\") return true;else return false;\n};\n\nconst isEmail = email => {\n  const emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (email.match(emailRegEx)) return true;else return false;\n};\n\nexports.signUpValidate = data => {\n  let errors = {};\n\n  if (isEmpty(data.email)) {\n    errors.email = \"must not be empty\";\n  }\n\n  if (!isEmail(data.email)) {\n    errors.email = \"must be a valid email address\";\n  }\n\n  if (isEmpty(data.password)) {\n    errors.password = \"must not be empty\";\n  }\n\n  if (data.password !== data.confirmPassword) {\n    errors.confirmPassword = \"Passwords must match\";\n  }\n\n  if (isEmpty(data.handle)) {\n    errors.handle = \"must not be empty\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0 ? true : false\n  };\n};\n\nexports.loginValidate = data => {\n  let errors = {};\n\n  if (isEmpty(data.email)) {\n    errors.email = \"must not be empty\";\n  }\n\n  if (isEmpty(data.password)) {\n    errors.password = \"must not be empty\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0 ? true : false\n  };\n};\n\nexports.reduceUserDetails = data => {\n  let userDetails = {};\n  if (!isEmpty(data.bio.trim())) userDetails.bio = data.bio;\n\n  if (!isEmpty(data.website.trim())) {\n    if (data.website.trim().substring(0, 4) !== 'http') {\n      userDetails.website = `http://${data.website.trim()}`;\n    } else userDetails.website = data.website;\n  }\n\n  if (!isEmpty(data.location.trim())) userDetails.location = data.location;\n  return userDetails;\n};","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/utils/validators.js"],"names":["isEmpty","string","trim","isEmail","email","emailRegEx","match","exports","signUpValidate","data","errors","password","confirmPassword","handle","isValid","Object","keys","length","loginValidate","reduceUserDetails","userDetails","bio","website","substring","location"],"mappings":"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","sourcesContent":["const isEmpty=(string)=>{\r\n    if(string.trim()=== \"\")\r\n        return true\r\n    else return false\r\n};\r\n\r\nconst isEmail=(email)=>{\r\n    const emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if(email.match(emailRegEx)) return true\r\n    else return false\r\n};\r\n\r\nexports.signUpValidate=(data)=>{\r\n    let errors = {};\r\n    if(isEmpty(data.email)){\r\n        errors.email=\"must not be empty\";\r\n    }if(!isEmail(data.email)){\r\n        errors.email=\"must be a valid email address\";\r\n    }\r\n    if(isEmpty(data.password)){\r\n        errors.password=\"must not be empty\";\r\n    }\r\n    if(data.password !== data.confirmPassword){\r\n        errors.confirmPassword=\"Passwords must match\";\r\n    }\r\n    if(isEmpty(data.handle)){\r\n        errors.handle=\"must not be empty\";\r\n    }\r\n\r\n    return{\r\n        errors,\r\n        isValid: Object.keys(errors).length===0 ? true : false\r\n    }\r\n}\r\n\r\nexports.loginValidate=(data)=>{\r\n    let errors={};\r\n    if(isEmpty(data.email)){\r\n        errors.email=\"must not be empty\";\r\n    }\r\n    if(isEmpty(data.password)){\r\n        errors.password=\"must not be empty\";\r\n    }\r\n\r\n    return{\r\n        errors,\r\n        isValid: Object.keys(errors).length===0 ? true : false\r\n    }\r\n}\r\n\r\nexports.reduceUserDetails=(data)=>{\r\n    let userDetails={};\r\n    if(!isEmpty(data.bio.trim())) userDetails.bio=data.bio;\r\n    if(!isEmpty(data.website.trim())){\r\n        if(data.website.trim().substring(0,4) !== 'http'){\r\n            userDetails.website=`http://${data.website.trim()}`;\r\n        }else userDetails.website=data.website\r\n    }\r\n    if(!isEmpty(data.location.trim())) userDetails.location=data.location;\r\n    return userDetails;\r\n}"]},"metadata":{},"sourceType":"module"}