{"ast":null,"code":"import firebase, { db } from '../firebase/firebase';\nimport { GET_POSTS } from '../actionConstants';\nimport 'firebase/firestore';\n\nfunction getPosts(data) {\n  return {\n    type: GET_POSTS,\n    data\n  };\n}\n\nexport const handleInitialData = () => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirebase().firestore();\n    let posts = [];\n    let id;\n    let post = {};\n    db.collection(\"posts\").get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        id = doc.id;\n        post[id] = doc.data(); //posts.push(post)\n\n        console.log(posts);\n        let postsIDs = Object.keys(posts).sort((a, b) => posts[b].createdAt - posts[a].createdAt);\n        console.log(postsIDs);\n      }); //dispatch(getPosts(posts))\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["E:/react/react-redux/social-app/src/actions/dataActions.js"],"names":["firebase","db","GET_POSTS","getPosts","data","type","handleInitialData","dispatch","getState","getFirebase","getFirestore","firestore","posts","id","post","collection","get","then","querySnapshot","forEach","doc","console","log","postsIDs","Object","keys","sort","a","b","createdAt","catch","err"],"mappings":"AACA,OAAOA,QAAP,IAAmBC,EAAnB,QAA6B,sBAA7B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAO,oBAAP;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACrB,SAAM;AACJC,IAAAA,IAAI,EAAEH,SADF;AAEJE,IAAAA;AAFI,GAAN;AAID;;AAED,OAAO,MAAME,iBAAiB,GAAC,MAAI;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAmD;AACxD,UAAMV,QAAQ,GAACS,WAAW,EAA1B;AACA,UAAME,SAAS,GAACF,WAAW,GAAGE,SAAd,EAAhB;AACA,QAAIC,KAAK,GAAC,EAAV;AACA,QAAIC,EAAJ;AACA,QAAIC,IAAI,GAAC,EAAT;AACAb,IAAAA,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GACCC,IADD,CACOC,aAAD,IAAmB;AACvBA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAQ;AAC9BP,QAAAA,EAAE,GAACO,GAAG,CAACP,EAAP;AACAC,QAAAA,IAAI,CAACD,EAAD,CAAJ,GAASO,GAAG,CAAChB,IAAJ,EAAT,CAF8B,CAG9B;;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,YAAIW,QAAQ,GAAEC,MAAM,CAACC,IAAP,CAAYb,KAAZ,EACXc,IADW,CACN,CAACC,CAAD,EAAGC,CAAH,KAAOhB,KAAK,CAACgB,CAAD,CAAL,CAASC,SAAT,GAAqBjB,KAAK,CAACe,CAAD,CAAL,CAASE,SAD/B,CAAd;AAEAR,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACE,OARF,EADuB,CAUvB;AACD,KAZD,EAaCO,KAbD,CAaOC,GAAG,IAAE;AACVV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,KAfD;AAgBD,GAtBD;AAuBD,CAxBM","sourcesContent":["\r\nimport firebase, { db } from '../firebase/firebase';\r\nimport {GET_POSTS} from '../actionConstants'\r\nimport 'firebase/firestore';\r\n\r\nfunction getPosts(data){\r\n  return{\r\n    type: GET_POSTS,\r\n    data\r\n  }\r\n}\r\n\r\nexport const handleInitialData=()=>{\r\n  return (dispatch, getState, {getFirebase, getFirestore})=>{\r\n    const firebase=getFirebase();\r\n    const firestore=getFirebase().firestore()\r\n    let posts=[];\r\n    let id;\r\n    let post={}\r\n    db.collection(\"posts\").get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) =>{\r\n      id=doc.id;\r\n      post[id]=doc.data();\r\n      //posts.push(post)\r\n      console.log(posts)\r\n      let postsIDs= Object.keys(posts)\r\n        .sort((a,b)=>posts[b].createdAt - posts[a].createdAt)\r\n      console.log(postsIDs)\r\n       });\r\n      //dispatch(getPosts(posts))\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}